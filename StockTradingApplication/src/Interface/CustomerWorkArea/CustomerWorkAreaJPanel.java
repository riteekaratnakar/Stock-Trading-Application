/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.CustomerWorkArea;

import Business.Agent.Agent;
import Business.Customer.Customer;
import Business.Customer.PurchasedShares;
import Business.Customer.SellShare;
import Business.Enterprice.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Utility.Constant;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Waqar
 */
public class CustomerWorkAreaJPanel extends javax.swing.JPanel {

    Network network;
    Enterprise enterprise;
    Agent agent;
    JPanel rightContainer;
    Customer customer;
    Organization organization;

    /**
     * Creates new form AgentWorkAreaJPanel
     */
    public CustomerWorkAreaJPanel(JPanel rightContainer, Network network, Enterprise enterprise, Agent agent, Customer customer) {
        initComponents();

        this.labelEnterprise.setText(enterprise.getEnterpriseName());
        this.lableNetwork.setText(network.getName());
        this.labelAgent.setText(agent.getName());
        this.labelCustomer.setText(customer.getName());
        this.labelAmountAvailable.setText(String.valueOf(customer.getBalance()));

        this.rightContainer = rightContainer;
        this.network = network;
        this.enterprise = enterprise;
        this.agent = agent;
        this.customer = customer;

        this.populateTable();
        this.populatePurchasedTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) this.tableCompany.getModel();
        model.setRowCount(0);

        for (Organization organization : this.agent.getSelectedOrganizationDirectoryList().getOrganizationList()) {
            Object[] row = new Object[5];
            row[0] = organization.getCompnayType();
            row[1] = organization.getCompanyName();
            row[2] = organization.getTotalNoOfshares();
            row[3] = organization.getShareVale();
            row[4] = this.agent.getBrokeragePercent();

            model.addRow(row);
        }
    }

    private void populatSellTable() {
        DefaultTableModel model = (DefaultTableModel) this.tableSell.getModel();
        model.setRowCount(0);

        for (SellShare sellShare : this.agent.getSellShareDirectoryList().getSelledSharesList()) {
            if (sellShare.getCustomerAccount().getUserName().equals(this.customer.getUserAccount().getUserName()) && sellShare.getCustomerAccount().getPassword().equals(this.customer.getUserAccount().getPassword())) //           
            {
                Object[] row = new Object[5];
                row[0] = sellShare.getRequestStatus();
                row[1] = sellShare.getCompanyName();
                row[2] = sellShare.getNoPurchasedShares();
                row[3] = sellShare.getAtPrice();
                row[4] = sellShare.getNoPurchasedShares() * sellShare.getAtPrice();
                model.addRow(row);
            }
        }
    }

    private void populatePurchasedTable() {
        DefaultTableModel model = (DefaultTableModel) this.tablePurchasedCompany.getModel();
        model.setRowCount(0);

        for (PurchasedShares purchasedShares : this.customer.getPurchasedSharesDirectory().getPurchasedSharesList()) {
            Object[] row = new Object[4];
            row[0] = purchasedShares.getCompanyName();
            row[1] = purchasedShares.getNoPurchasedShares();
            row[2] = purchasedShares.getAtPrice();
            row[3] = purchasedShares.getTotal();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelAgent = new javax.swing.JLabel();
        enterpriseLabel2 = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        labelEnterprise = new javax.swing.JLabel();
        lableNetwork = new javax.swing.JLabel();
        enterpriseLabel1 = new javax.swing.JLabel();
        labelCustomer = new javax.swing.JLabel();
        enterpriseLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCompany = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePurchasedCompany = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelAmountAvailable = new javax.swing.JLabel();
        textFieldPurchased = new javax.swing.JTextField();
        buttonPurchased = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        chartButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        textSellShare = new javax.swing.JTextField();
        textSellPrice = new javax.swing.JTextField();
        sellSharesButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableSell = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        labelAgent.setText("<value>");
        add(labelAgent);
        labelAgent.setBounds(705, 23, 95, 16);

        enterpriseLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel2.setText("Agent:");
        add(enterpriseLabel2);
        enterpriseLabel2.setBounds(579, 12, 120, 30);

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        add(enterpriseLabel);
        enterpriseLabel.setBounds(305, 11, 120, 30);

        labelEnterprise.setText("<value>");
        add(labelEnterprise);
        labelEnterprise.setBounds(443, 22, 130, 16);

        lableNetwork.setText("<value>");
        add(lableNetwork);
        lableNetwork.setBounds(136, 22, 88, 16);

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setText("Network");
        add(enterpriseLabel1);
        enterpriseLabel1.setBounds(10, 11, 120, 30);

        labelCustomer.setText("<value>");
        add(labelCustomer);
        labelCustomer.setBounds(932, 23, 95, 16);

        enterpriseLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel3.setText("Customer");
        add(enterpriseLabel3);
        enterpriseLabel3.setBounds(806, 12, 120, 30);

        tableCompany.setBackground(new java.awt.Color(204, 204, 255));
        tableCompany.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Company Type", "Company Name", "Available Shares", "Price Per Share"
            }
        ));
        jScrollPane1.setViewportView(tableCompany);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 110, 1000, 134);

        tablePurchasedCompany.setBackground(new java.awt.Color(204, 204, 255));
        tablePurchasedCompany.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Company Name", "No Purchased Shares", "At Price", "Total"
            }
        ));
        jScrollPane2.setViewportView(tablePurchasedCompany);

        add(jScrollPane2);
        jScrollPane2.setBounds(10, 312, 990, 134);

        jLabel1.setText("Available Companies");
        add(jLabel1);
        jLabel1.setBounds(10, 88, 140, 16);

        jLabel2.setText("Shares You Owe");
        add(jLabel2);
        jLabel2.setBounds(10, 292, 130, 16);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Available Amount:");
        add(jLabel3);
        jLabel3.setBounds(10, 56, 131, 17);

        labelAmountAvailable.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        labelAmountAvailable.setText("NA");
        add(labelAmountAvailable);
        labelAmountAvailable.setBounds(159, 60, 120, 17);

        textFieldPurchased.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPurchasedActionPerformed(evt);
            }
        });
        add(textFieldPurchased);
        textFieldPurchased.setBounds(440, 252, 157, 30);

        buttonPurchased.setText("Purchase");
        buttonPurchased.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPurchasedActionPerformed(evt);
            }
        });
        add(buttonPurchased);
        buttonPurchased.setBounds(632, 251, 207, 29);

        jLabel4.setText("No of shares:");
        add(jLabel4);
        jLabel4.setBounds(312, 254, 110, 16);

        chartButton.setText("Create Chart");
        chartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartButtonActionPerformed(evt);
            }
        });
        add(chartButton);
        chartButton.setBounds(285, 56, 120, 29);

        jButton1.setText("Download File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(475, 56, 133, 29);

        textSellShare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSellShareActionPerformed(evt);
            }
        });
        add(textSellShare);
        textSellShare.setBounds(312, 482, 62, 30);

        textSellPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSellPriceActionPerformed(evt);
            }
        });
        add(textSellPrice);
        textSellPrice.setBounds(450, 482, 62, 30);

        sellSharesButton.setText("Request Sell Share");
        sellSharesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellSharesButtonActionPerformed(evt);
            }
        });
        add(sellSharesButton);
        sellSharesButton.setBounds(530, 482, 166, 29);

        jLabel6.setText("At Price:");
        add(jLabel6);
        jLabel6.setBounds(392, 489, 52, 16);

        tableSell.setBackground(new java.awt.Color(204, 204, 255));
        tableSell.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Status", "Company Name", "Sell Share", "At Price", "Total"
            }
        ));
        jScrollPane3.setViewportView(tableSell);

        add(jScrollPane3);
        jScrollPane3.setBounds(0, 530, 1017, 134);

        jLabel7.setText("Shares:");
        add(jLabel7);
        jLabel7.setBounds(249, 489, 45, 16);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/CustomerWorkArea/stock.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        add(jLabel5);
        jLabel5.setBounds(0, 2, 1070, 660);
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldPurchasedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPurchasedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPurchasedActionPerformed

    private void buttonPurchasedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPurchasedActionPerformed
        // TODO add your handling code here:

        int selectedRow = tableCompany.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to purchase ?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Organization organization = this.agent.getSelectedOrganizationDirectoryList().getOrganizationList().get(selectedRow);

                int noOfsahresPurshased = Integer.valueOf(textFieldPurchased.getText());

                float total = noOfsahresPurshased * organization.getShareVale();
                float agentComission = (total / 100) * this.agent.getBrokeragePercent();
                float totalAmount = total + agentComission;

                if (customer.getBalance() >= totalAmount) {

                    PurchasedShares purchasedShares = this.customer.getPurchasedSharesDirectory().createAndAddPurchasedShares();
                    purchasedShares.setCompanyName(organization.getCompanyName());
                    purchasedShares.setNoPurchasedShares(noOfsahresPurshased);
                    purchasedShares.setAtPrice(organization.getShareVale());
                    purchasedShares.setTotal(total);
                    organization.setTotalNoOfshares(organization.getTotalNoOfshares() - noOfsahresPurshased);
                    this.agent.setBrokeragePercent(this.agent.getTotalProfit() + agentComission);

                    this.populateTable();
                    this.populatePurchasedTable();
                    this.customer.setBalance(this.customer.getBalance() - totalAmount);
                    String amt = String.valueOf(this.customer.getBalance());
                    this.labelAmountAvailable.setText(amt);

                } else {
                    JOptionPane.showMessageDialog(null, "Please Enter Valid No. !!");
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }


    }//GEN-LAST:event_buttonPurchasedActionPerformed

    private void chartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartButtonActionPerformed
        // TODO add your handling code here:

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (PurchasedShares e : customer.getPurchasedSharesDirectory().getPurchasedSharesList()) {
            dataset.setValue(e.getNoPurchasedShares(), "Total Price", e.getCompanyName());

        }

        JFreeChart chart = ChartFactory.createBarChart3D("Shares Report", "Company Name", "No of shares purchased", dataset, PlotOrientation.VERTICAL, false, true, false);
        chart.setBackgroundPaint(Color.GRAY);
        chart.getTitle().setPaint(Color.BLUE);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame = new ChartFrame("Bar Chart for Customer", chart);
        frame.setVisible(true);
        frame.setSize(450, 350);

        try {
            final ChartRenderingInfo info = new ChartRenderingInfo(new StandardEntityCollection());
            final File file1 = new File("Customer_Report.png");
            ChartUtilities.saveChartAsPNG(file1, chart, 600, 400, info);

        } catch (Exception e) {

        }
    }//GEN-LAST:event_chartButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        File file = new File("H:\\StockTradingApplication\\xyz.xls");

        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);

            for (int j = 0; j < tablePurchasedCompany.getColumnCount(); j++) {
                bw.write(tablePurchasedCompany.getColumnName(j) + "\t");
            }
            bw.newLine();

            for (int i = 0; i < tablePurchasedCompany.getRowCount(); i++) {
                for (int j = 0; j < tablePurchasedCompany.getColumnCount(); j++) {
                    System.out.println(tablePurchasedCompany.getValueAt(i, j).toString());
                    bw.write(tablePurchasedCompany.getValueAt(i, j).toString() + "\t");
                }
                bw.newLine();
            }

            bw.close();
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(CustomerWorkAreaJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textSellPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSellPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSellPriceActionPerformed

    private void sellSharesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellSharesButtonActionPerformed
        //        // TODO add your handling code here:
        try {

            int selectedRow = tablePurchasedCompany.getSelectedRow();
            if (selectedRow >= 0) {
                int selectionButton = JOptionPane.YES_NO_OPTION;
                int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to sell ?", "Warning", selectionButton);
                if (selectionResult == JOptionPane.YES_OPTION) {
                    PurchasedShares purchasedShares = this.customer.getPurchasedSharesDirectory().getPurchasedSharesList().get(selectedRow);
                    int noShare = Integer.valueOf(textSellShare.getText());
                    int atPrice = Integer.valueOf(textSellPrice.getText());

                    if (purchasedShares.getNoPurchasedShares() >= noShare && noShare > 0 && atPrice > 0) {

                        SellShare sellShare = this.agent.getSellShareDirectoryList().createAndAddSellShares();
                        sellShare.setAtPrice(atPrice);
                        sellShare.setNoPurchasedShares(noShare);
                        sellShare.setCompanyName(purchasedShares.getCompanyName());
                        sellShare.setCustomerAccount(this.customer.getUserAccount());
                        sellShare.setRequestStatus(Constant.RequestStatus.Pending);

                        purchasedShares.setNoPurchasedShares(purchasedShares.getNoPurchasedShares() - noShare);

                        if ((purchasedShares.getNoPurchasedShares() - noShare) == 0) {
                            this.customer.getPurchasedSharesDirectory().getPurchasedSharesList().remove(selectedRow);
                        }

                        this.populatePurchasedTable();
                        this.populatSellTable();
                    } else {
                        JOptionPane.showMessageDialog(null, "Please Enter Valid No. !!");
                    }
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid No. !!");

        }
    }//GEN-LAST:event_sellSharesButtonActionPerformed

    private void textSellShareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSellShareActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSellShareActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonPurchased;
    private javax.swing.JButton chartButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel enterpriseLabel2;
    private javax.swing.JLabel enterpriseLabel3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelAgent;
    private javax.swing.JLabel labelAmountAvailable;
    private javax.swing.JLabel labelCustomer;
    private javax.swing.JLabel labelEnterprise;
    private javax.swing.JLabel lableNetwork;
    private javax.swing.JButton sellSharesButton;
    private javax.swing.JTable tableCompany;
    private javax.swing.JTable tablePurchasedCompany;
    private javax.swing.JTable tableSell;
    private javax.swing.JTextField textFieldPurchased;
    private javax.swing.JTextField textSellPrice;
    private javax.swing.JTextField textSellShare;
    // End of variables declaration//GEN-END:variables
}
