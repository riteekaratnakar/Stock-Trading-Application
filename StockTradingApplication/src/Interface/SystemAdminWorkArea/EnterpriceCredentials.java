/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.SystemAdminWorkArea;

import Business.Agent.Agent;
import Business.Enterprice.Enterprise;
import Business.Network.Network;
import Business.StockTrading;
import Business.User.UserAccount;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Utility.Constant.UserType;
import Utility.Validation;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Waqar
 */
public class EnterpriceCredentials extends javax.swing.JPanel {

    JPanel rightContainer;
    StockTrading stockInstance;

    /**
     * Creates new form EnterpriceCredentials
     */
    public EnterpriceCredentials(JPanel rightContainer, StockTrading stockInstance) {
        initComponents();

        this.rightContainer = rightContainer;
        this.stockInstance = stockInstance;
        this.populateNetworkComboBox();
        this.populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        usernameJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jPanel1.setLayout(null);

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Network", "Enterprise Name", "Name", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(39, 58, 523, 95);

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(networkJComboBox);
        networkJComboBox.setBounds(200, 180, 136, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Network");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(90, 190, 51, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Enterprise");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(90, 240, 61, 17);

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(enterpriseJComboBox);
        enterpriseJComboBox.setBounds(200, 230, 136, 30);
        jPanel1.add(usernameJTextField);
        usernameJTextField.setBounds(200, 270, 136, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Username");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(90, 280, 61, 17);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Password");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(90, 320, 58, 17);
        jPanel1.add(passwordJPasswordField);
        passwordJPasswordField.setBounds(200, 310, 134, 30);
        jPanel1.add(nameJTextField);
        nameJTextField.setBounds(200, 360, 136, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Name");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(90, 370, 35, 17);

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backJButton);
        backJButton.setBounds(10, 430, 91, 30);

        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitJButton.setText("Create");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(submitJButton);
        submitJButton.setBounds(339, 431, 79, 30);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/SystemAdminWorkArea/stock.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, 0, 730, 480);

        add(jPanel1);
        jPanel1.setBounds(0, -10, 730, 480);
    }// </editor-fold>//GEN-END:initComponents

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : this.stockInstance.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserList()) {
                    if (userAccount.getType() == UserType.EnterpriseAdmin) {
                        Object[] row = new Object[5];
                        row[0] = network.getName();
                        row[1] = enterprise.getEnterpriseName();
                        row[2] = userAccount.getName();
                        row[3] = userAccount.getUserName();
                        row[4] = userAccount.getPassword();
                        model.addRow(row);
                    }
                }
            }
        }
    }

    private void populateNetworkComboBox() {
        networkJComboBox.removeAllItems();
        for (Network network : this.stockInstance.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseJComboBox.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseJComboBox.addItem(enterprise);
        }

    }
    
     private boolean passwordRegex(String key) {
       Pattern userName = Pattern.compile("(?=.*[A-Za-z0-9])(?=.*[+_$]).{5,15}");
       Matcher m = userName.matcher(key);
       boolean matches = m.matches();
       return matches;
   }

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        }

    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        rightContainer.remove(this);
        Component[] componentArray = rightContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        CardLayout layout = (CardLayout) rightContainer.getLayout();
        layout.previous(rightContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        Network network = (Network) this.networkJComboBox.getSelectedItem();
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();
        
         try{
          if (name.length() == 0 | name == null | password.length() == 0
                | password == null | username.length() == 0 | username == null ) {
                JOptionPane.showMessageDialog(null, "Please Complete all required fields");
            }
       else if(!Validation.checkUniquenessOfUserNameEnterpise(username, network)){
            JOptionPane.showMessageDialog(null, "Username Already Exists");
        } 
         else if(!(passwordRegex(passwordJPasswordField.getText()))){
        JOptionPane.showMessageDialog(this, "Enter valid Password.");
           passwordJPasswordField.setBackground(Color.decode("#FF9999"));
        }
        
           else if(!Validation.isStringOnlyAlphabet(nameJTextField.getText())){
            JOptionPane.showMessageDialog(null, "Please enter a valid text");
            
        }
         
          else{
        enterprise.getUserAccountDirectory().createUserAccount(username, password, name, UserType.EnterpriseAdmin);
        populateTable();}
         }
    catch(Exception e){
        JOptionPane.showMessageDialog(null, "Please enter valid inputs","Incorrect Input", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
