/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.EnterpriseAdminRole.ManageRequest;

import Business.Agent.Agent;
import Business.Customer.Customer;
import Business.Enterprice.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.StockTrading;
import Business.User.UserAccount;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import Utility.Constant;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Waqar
 */
public class ManageRequestJPanel extends javax.swing.JPanel {

    StockTrading stockTrading;
    Enterprise enterprise;
    JPanel rightContainer;
    UserAccount useraccount;

    /**
     * Creates new form ManageRequestJPaunel
     */
    public ManageRequestJPanel(JPanel rightContainer, StockTrading stockTrading, Enterprise enterprise, UserAccount useraccount) {
        initComponents();

        this.stockTrading = stockTrading;
        this.enterprise = enterprise;
        this.rightContainer = rightContainer;
        this.useraccount = useraccount;
        this.configureNetworkCombo();

        this.populateRecievedRequestTable(enterprise.getWorkQueueDirecoryRecieved());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void configureNetworkCombo() {

        comboBoxNetwork.removeAllItems();
        for (Network network : this.stockTrading.getNetworkList()) {
            this.comboBoxNetwork.addItem(network);
            //this.configureEnterpriseCombo(network);
        }
    }

    private void configureEnterpriseCombo(Network network) {
        comboBoxEnterprise.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (this.enterprise.getEnterpriseName() != enterprise.getEnterpriseName()) {
                this.comboBoxEnterprise.addItem(enterprise);
            }
        }
    }

    private void populateTable(Enterprise enterprise) {
        if (enterprise.getOrganizationDirectoryList() != null) {

            DefaultTableModel model = (DefaultTableModel) this.tableCompany.getModel();
            model.setRowCount(0);
            for (Organization organization : enterprise.getOrganizationDirectoryList().getOrganizationList()) {
                Object[] row = new Object[3];
                row[0] = organization.getCompnayType();
                row[1] = organization.getCompanyName();
                row[2] = organization.getTotalNoOfshares();
                model.addRow(row);
            }
        }
    }

    private void populateRecievedRequestTable(WorkQueue workQueue) {

        if (workQueue == null) {
            return;
        }

        if (workQueue.getWorkRequestList() != null) {
            DateFormat dateFormat = new SimpleDateFormat("MMM-dd-YYYY");

            DefaultTableModel model = (DefaultTableModel) this.tableRecieved.getModel();
            model.setRowCount(0);
            for (WorkRequest workRequest : workQueue.getWorkRequestList()) {
                Object[] row = new Object[6];
                row[0] = workRequest.getRequestRaiser();
                row[1] = workRequest.getStatus();
                row[2] = dateFormat.format(workRequest.getRequestDate());
                row[3] = workRequest.getNetworkName();
                row[4] = workRequest.getEnterpriseName();
                row[5] = workRequest.getCompanyName();
                model.addRow(row);
            }
        }
    }

    private void populateSentTable(WorkQueue workQueue) {

        if (workQueue == null) {
            return;
        }
        if (workQueue.getWorkRequestList() != null) {
            DateFormat dateFormat = new SimpleDateFormat("MMM-dd-YYYY");

            DefaultTableModel model = (DefaultTableModel) this.tabletSent.getModel();
            model.setRowCount(0);
            for (WorkRequest workRequest : workQueue.getWorkRequestList()) {
                Object[] row = new Object[6];
                row[0] = workRequest.getStatus();
                row[1] = dateFormat.format(workRequest.getRequestDate());
                row[2] = workRequest.getNetworkName();
                row[3] = workRequest.getEnterpriseName();
                row[4] = workRequest.getCompanyName();
                model.addRow(row);
            }
        }
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonRaiseRequest1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        comboBoxNetwork = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboBoxEnterprise = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableCompany = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRecieved = new javax.swing.JTable();
        buttonRaiseRequest = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabletSent = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        buttonRaiseRequest3 = new javax.swing.JButton();
        buttonRaiseRequest4 = new javax.swing.JButton();

        buttonRaiseRequest1.setText("Raise Request");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel10.setText("Create Request");

        comboBoxNetwork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxNetworkActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel11.setText("Request Sent");

        jLabel8.setText("Network:");

        jLabel9.setText("Enterprise:");

        comboBoxEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEnterpriseActionPerformed(evt);
            }
        });

        tableCompany.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Company Type", "Company Name", "Total Number of Shares"
            }
        ));
        jScrollPane3.setViewportView(tableCompany);

        tableRecieved.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Request Raiser", "Status", "Date", "Network", "Enterprise", "Compnay"
            }
        ));
        jScrollPane2.setViewportView(tableRecieved);
        if (tableRecieved.getColumnModel().getColumnCount() > 0) {
            tableRecieved.getColumnModel().getColumn(0).setHeaderValue("Request ID");
        }

        buttonRaiseRequest.setText("Raise Request");
        buttonRaiseRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRaiseRequestActionPerformed(evt);
            }
        });

        tabletSent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Status", "Date", "Network", "Enterprise", "Compnay"
            }
        ));
        jScrollPane4.setViewportView(tabletSent);

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel12.setText("Request Recieved");

        buttonRaiseRequest3.setText("Approve");

        buttonRaiseRequest4.setText("Decline");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel10)
                .addGap(203, 795, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(220, 220, 220))))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(144, 144, 144)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(256, 256, 256))))
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(buttonRaiseRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonRaiseRequest3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(buttonRaiseRequest4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(comboBoxNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRaiseRequest)
                    .addComponent(buttonRaiseRequest3)
                    .addComponent(buttonRaiseRequest4))
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxNetworkActionPerformed

        Network network = (Network) this.comboBoxNetwork.getSelectedItem();
        if (network != null) {
            this.configureEnterpriseCombo(network);
        }

    }//GEN-LAST:event_comboBoxNetworkActionPerformed

    private void comboBoxEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEnterpriseActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise = (Enterprise) this.comboBoxEnterprise.getSelectedItem();
        if (enterprise != null) {
            this.populateTable(enterprise);
            this.populateSentTable(enterprise.getWorkQueueDirecorySent());
        }
    }//GEN-LAST:event_comboBoxEnterpriseActionPerformed

    private void buttonRaiseRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRaiseRequestActionPerformed
        // TODO add your handling code here:

        int selectedRow = tableCompany.getSelectedRow();
        if (selectedRow >= 0) {
            Network network = (Network) this.comboBoxNetwork.getSelectedItem();
            Enterprise enterprise = (Enterprise) this.comboBoxEnterprise.getSelectedItem();
            Organization organization = enterprise.getOrganizationDirectoryList().getOrganizationList().get(selectedRow);

            WorkRequest requestR = enterprise.getWorkQueueDirecoryRecieved().createWorkQueueAccount();
            WorkRequest requestS = enterprise.getWorkQueueDirecorySent().createWorkQueueAccount();

            requestR.setSender(this.useraccount);
            requestR.setStatus(Constant.RequestStatus.Pending);
            requestR.setRequestRaiser(Constant.RequestRaiser.EnterpriseAdmin);
            requestR.setNetworkName(network.getName());
            requestR.setEnterpriseName(this.enterprise.getEnterpriseName());
            requestR.setCompanyName(organization.getCompanyName());

            requestS.setSender(this.useraccount);
            requestS.setStatus(Constant.RequestStatus.Pending);
            requestS.setRequestRaiser(Constant.RequestRaiser.EnterpriseAdmin);
            requestS.setNetworkName(network.getName());
            requestS.setEnterpriseName(enterprise.getEnterpriseName());
            requestS.setCompanyName(organization.getCompanyName());

            this.populateSentTable(enterprise.getWorkQueueDirecorySent());
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Company!!");
        }


    }//GEN-LAST:event_buttonRaiseRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonRaiseRequest;
    private javax.swing.JButton buttonRaiseRequest1;
    private javax.swing.JButton buttonRaiseRequest3;
    private javax.swing.JButton buttonRaiseRequest4;
    private javax.swing.JComboBox comboBoxEnterprise;
    private javax.swing.JComboBox comboBoxNetwork;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tableCompany;
    private javax.swing.JTable tableRecieved;
    private javax.swing.JTable tabletSent;
    // End of variables declaration//GEN-END:variables
}
